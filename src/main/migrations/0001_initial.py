# Generated by Django 3.0.2 on 2020-05-24 23:04

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main.defaults


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, default=main.defaults.get_default_username, max_length=128, unique=True, verbose_name='username')),
                ('password', models.CharField(blank=True, max_length=100, verbose_name='password')),
                ('language', models.CharField(default='en-us', max_length=10, verbose_name='default language')),
                ('title', models.CharField(blank=True, max_length=20, verbose_name='title')),
                ('photo', models.FileField(blank=True, null=True, upload_to='profile')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('verified_email', models.EmailField(blank=True, max_length=254, verbose_name='verified_email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone number')),
                ('verified_phone', models.CharField(blank=True, max_length=20, verbose_name='verified phone number')),
                ('country', models.CharField(blank=True, max_length=50, verbose_name='country')),
                ('town', models.CharField(blank=True, max_length=50, verbose_name='town')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='address')),
                ('is_deleted', models.BooleanField(default=False)),
                ('code', models.CharField(blank=True, max_length=20, verbose_name='password_reset_code')),
                ('phone_verification_code', models.CharField(blank=True, max_length=20, verbose_name='phone_verification_code')),
                ('email_verification_code', models.CharField(blank=True, max_length=20, verbose_name='email_verification_code')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SocialAuth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_type', models.CharField(choices=[('basic', 'basic'), ('facebook', 'facebook'), ('google', 'google')], default='basic', max_length=20)),
                ('auth_id', models.CharField(blank=True, max_length=100, verbose_name='External Auth ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_auth', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
